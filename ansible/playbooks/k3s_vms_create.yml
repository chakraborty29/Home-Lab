---
- name: Create K3s VMs
  hosts: localhost
  gather_facts: false
  become: true
  vars:
    target_vm: ""  # Can be set via --extra-vars "target_vm=k3s-master-1"

  tasks:
    - name: Set VM list
      set_fact:
        vm_list: "{{ [target_vm] if target_vm != '' else (groups['master'] + groups['node']) }}"

    - name: Create terraform directories
      ansible.builtin.file:
        path: "{{ paths.terraform }}/proxmox/terraform/k3s/{{ item }}"
        state: directory
        mode: '0755'
        owner: "{{ common.ansible_user }}"
        group: "{{ common.ansible_user }}"
      loop: "{{ vm_list }}"

    - name: Copy terraform templates
      ansible.builtin.synchronize:
        src: "{{ paths.homelab }}/templates/terraform-base-template/"
        dest: "{{ paths.terraform }}/proxmox/terraform/k3s/{{ item }}"
        mode: push
      loop: "{{ vm_list }}"
      become: false

    - name: Copy tfvars files
      ansible.builtin.copy:
        src: "{{ paths.credentials }}/k3s/{{ item }}.tfvars"
        dest: "{{ paths.terraform }}/proxmox/terraform/k3s/{{ item }}/{{ item }}.tfvars"
        mode: '0644'
        owner: "{{ common.ansible_user }}"
        group: "{{ common.ansible_user }}"
      loop: "{{ vm_list }}"

    - name: Initialize terraform
      ansible.builtin.command: terraform init
      args:
        chdir: "{{ paths.terraform }}/proxmox/terraform/k3s/{{ item }}/"
      loop: "{{ vm_list }}"
      become_user: "{{ common.ansible_user }}"

    - name: Create/Update VM
      ansible.builtin.command: >
        terraform apply -auto-approve 
        -var-file='{{ paths.terraform }}/proxmox/terraform/k3s/{{ item }}/{{ item }}.tfvars'
      args:
        chdir: "{{ paths.terraform }}/proxmox/terraform/k3s/{{ item }}/"
      loop: "{{ vm_list }}"
      become_user: "{{ common.ansible_user }}"
